// variables maps
@use "sass:math";

@function rem($px) {
  @return (math.div($px, 16) * 1rem);
}
$colors: (
  "primary1": rgba(6, 59, 95, 1),
  "primary2": rgb(8, 79, 126),
  "primary3": rgb(13, 118, 189),
  "primary4": rgb(29, 155, 240),
  "primary5": rgb(74, 175, 243),
  "primary6": rgb(119, 195, 246),
  "primary7": rgb(165, 215, 249),
  "primary8": rgb(195, 228, 251),
  "primary9": rgba(8, 79, 126, 0.4),
  "primary10": rgba(55, 47, 50, 0.1),
  "accent": rgb(240, 190, 5),
  "neutral": rgb(246, 246, 246),
  "gradient1": rgb(29, 155, 240),
  "gradient2": rgb(49, 246, 246),
  "gradient3": rgb(1, 76, 142),
  "whiteColor": rgb(255, 255, 255),
  "blackColor": rgba(0, 0, 0, 0.25),
);

$font-sizes-desktop: (
  "h1": rem(48),
  "h2": rem(40),
  "h3": rem(28),
  "h4": rem(20),
  "small": rem(16),
  "pargraph": rem(20),
);

$font-sizes-mobile: (
  "h1": rem(33),
  "h2": rem(28),
  "h3": rem(23),
  "h4": rem(19),
  "h5": rem(16),
  "small": rem(13),
  "pargraph": rem(11),
);

$grid-breakpoints: (
  "xs": 0,
  "sm": rem(576),
  "md": rem(768),
  "lg": rem(992),
  "xl": rem(1200),
  "xxl": rem(1400),
  "height": rem(320),
);

@mixin mobile() {
  @media (min-width: map-get($grid-breakpoints,xs)) and (max-width: map-get($grid-breakpoints,md)) {
    @content;
  }
  @media (max-height: rem(350)) {
    @content;
  }
}
@mixin desktop() {
  @media (min-width: map-get($grid-breakpoints,md)) {
    @content;
  }
}
@mixin large() {
  @media (min-width: map-get($grid-breakpoints,lg)) and (max-width: map-get($grid-breakpoints,xl)) {
    @content;
  }
}

@mixin medium() {
  @media (min-width: map-get($grid-breakpoints,sm)) and (max-width: map-get($grid-breakpoints,lg)) {
    @content;
  }
}
@mixin x-large() {
  @media (min-width: map-get($grid-breakpoints,lg)) {
    @content;
  }
}
.app {
  position: relative;
}
.animate {
  div {
    rotate: 180deg;
    span {
      background: transparent !important ;
      &::before {
        top: 0px !important;
        rotate: 45deg;
      }
      &::after {
        top: 0px !important;
        rotate: -45deg;
      }
    }
  }
}
.responsive {
  height: 100% !important ;
  // visibility: visible !important;
  transform: translatey(0) !important;
}
.over {
  @include mobile {
    display: block !important;
  }
  opacity: 1;
  visibility: visible;
}
.pDisply {
  display: block !important;
  top: 0 !important;
  margin-top: rem(8);
  transform: translatey(0%) !important;
}
.op {
  opacity: 1 !important;
}
